# This configuration spins up a client with dummy sensors
# Ideal for testing on a laptop :)

# Remember that the LogEventSink runs automatically...
Main:
    # Here we include our default MqttEventSink configuration for uploading events to an MQTT broker
    include_config_files: ["mqtt_config.yml"]

EventSinks:
    # Store events in a local MySQL database
    #MySQLDatabase:
      #class: "mysql_event_sink.MySQLEventSink"
      #dbname: "scale_client"
      #username: "scale_usr"
      #password: "admin"

Applications:
        #    Test:
      # This test app tries to increment the temperature reading by 1 and adds a '1' to the end of the heartbeat.
      # class: "test_application.TestApplication"
      # subscriptions: ["temperature", "heartbeat"]
      # Thread:
      # Good to verify that threaded applications will run properly.
      #  class: "dummy_threaded_application.DummyThreadedApplication"
    #MySQLDatabase:
      #class: "mysql_maintainer.MySQLMaintainer"
      #dbname: "scale_client"
      #username: "scale_usr"
      #password: "admin"

Sensors:
    #GasSensor0:
      #class: "environment.gas_physical_sensor.GasPhysicalSensor"
      #sensors: "gas0"
      #analog_port: 0
      #threshold: 0

    #GasSensor1:
      #class: "environment.gas_physical_sensor.GasPhysicalSensor"
      #sensors: "gas1"
      #analog_port: 1
      #threshold: 0

    GasSensor2:
      class: "environment.gas_physical_sensor.GasPhysicalSensor"
      sensors: "gas2"
      analog_port: 2
      threshold: 0

    #GasSensor3:
      #class: "environment.gas_physical_sensor.GasPhysicalSensor"
      #sensors: "gas3"
      #analog_port: 3
      #threshold: 0

    #PIRSensor:
      #class: "environment.pir_physical_sensor.PirPhysicalSensor"
      #device: "pir0"
      #gpio_pin: 17

#####    FURTHER TESTING TO CONSIDER!

# Run another config file that includes this one!
# Then also try specifying command line parameters to add to these configs

# Could optionally include some virtual sensors to make sure the pub-sub system is working properly
# and we can issue higher-level events given lower-level ones.  These should work
# even with dummy physical sensors.

# To test your PYTHONPATH is set up properly for importing external modules, execute:
# cp scale_client/sensors/dummy/dummy_temperature_physical_sensor.py ~/scratch/scale_client/external_scale_client/
# and then put ~/scratch/scale_client on your PYTHONPATH and uncomment the dummy sensor below:
# NOTE: this simple copy test only works because this class does "from scale_client.sensors..."
#   ExternalDummySensor:
#     class: "external_scale_client.dummy_temperature_physical_sensor.DummyTemperaturePhysicalSensor"
