# This configuration spins up a client with dummy sensors
# Ideal for testing on a laptop :)

# Remember that the LogEventSink runs automatically...

Applications:
        #    Test:
      # This test app tries to increment the temperature reading by 1 and adds a '1' to the end of the heartbeat.
      # class: "test_application.TestApplication"
      # subscriptions: ["temperature", "heartbeat"]
      # Thread:
      # Good to verify that threaded applications will run properly.
      #  class: "dummy_threaded_application.DummyThreadedApplication"

Sensors:
    HBSensor:
      class: "dummy.heartbeat_sensor.HeartbeatSensor"
      interval: 5
      # DummyGasSensor:
      # class: "dummy.dummy_gas_physical_sensor.DummyGasPhysicalSensor"
      # device: "gas0"
      # interval: 3
      # DummyTempSensor:
      # class: "dummy.dummy_temperature_physical_sensor.DummyTemperaturePhysicalSensor"
      # device: "cel0"
      # DummySeismicSensor:
      # This is useful for testing that VirtualSensor.set_wait_period functions properly.
      # class: "dummy.dummy_csn_sensor.DummyCsnSensor"
      #interval: 2
    # Disable this one if you don't have internet access and it causes issues
    #InternetAccessSensor:
     # class: "network.internet_access_sensor.InternetAccessSensor"

#####    FURTHER TESTING TO CONSIDER!

# Run another config file that includes this one!
# Then also try specifying command line parameters to add to these configs

# Could optionally include some virtual sensors to make sure the pub-sub system is working properly
# and we can issue higher-level events given lower-level ones.  These should work
# even with dummy physical sensors.

# To test your PYTHONPATH is set up properly for importing external modules, execute:
# cp scale_client/sensors/dummy/dummy_temperature_physical_sensor.py ~/scratch/scale_client/external_scale_client/
# and then put ~/scratch/scale_client on your PYTHONPATH and uncomment the dummy sensor below:
# NOTE: this simple copy test only works because this class does "from scale_client.sensors..."
#   ExternalDummySensor:
#     class: "external_scale_client.dummy_temperature_physical_sensor.DummyTemperaturePhysicalSensor"
